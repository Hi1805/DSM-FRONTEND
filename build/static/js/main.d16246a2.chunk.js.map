{"version":3,"sources":["App.tsx","reportWebVitals.ts","store.ts","index.tsx","modules/students/index.ts","modules/teachers/index.ts","modules/students/constants.ts","modules/teachers/constants.ts","apis/config.ts","apis/api.ts","modules/index.ts","modules/teachers/reducers.ts","modules/app.ts","modules/students/actions.ts","modules/students/reducers.ts","modules/students/selector.ts","modules/teachers/actions.ts","modules/teachers/selector.ts","modules/students/sagas/studentSaga.ts","modules/students/sagas/index.ts","modules/teachers/sagas/teacherSaga.ts","modules/teachers/sagas/index.ts"],"names":["history","createBrowserHistory","LoginScreen","React","lazy","ManagementViews","App","Fragment","Suspense","fallback","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagaMiddleware","createSagaMiddleware","rangerMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","rootSaga","ReactDOM","render","StrictMode","document","getElementById","STUDENT_FETCH_LIST","STUDENT_LIST_DATA","TEACHER_FETCH_LIST","TEACHER_LIST_DATA","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","error","Promise","reject","response","data","status","console","log","teacherApi","getAll","get","getTotal","delete","id","url","payload","post","put","studentApi","getStudent","combineReducers","teacher","teacherReducer","student","studentReducer","all","call","rootTeacherSaga","rootStudentSaga","initListTeacher","list","pagination","size","page","isSort","total","loading","listTeacherReducer","state","action","type","listStudentReducer","fetchListStudent","getStudents","initListStudent","selectListStudent","fetchListTeacher","getTeachers","selectListTeacher","getListStudentSaga","toast","warning","takeLatest","getListTeacherSaga","res"],"mappings":"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","file":"static/js/main.d16246a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"reactjs-popup/dist/index.css\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst LoginScreen = React.lazy(() => import(\"screens/LoginScreen\"));\r\nconst ManagementViews = React.lazy(() => import(\"routes\"));\r\nfunction App() {\r\n  // React.useEffect(() => {\r\n  //   if (!isSafePath(history.location.pathname)) {\r\n  //     history.push(\"/manage/teacher\");\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <Router history={history}>\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n          <Switch>\r\n            <React.Fragment>\r\n              <Route exact path=\"/login\" component={LoginScreen} />\r\n              <ManagementViews />\r\n            </React.Fragment>\r\n          </Switch>\r\n        </React.Suspense>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { rootReducer } from \"./modules\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst rangerMiddleware = createSagaMiddleware();\r\n\r\n// tslint:disable-next-line:no-any\r\nconst composeEnhancer: typeof compose =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancer(applyMiddleware(sagaMiddleware, rangerMiddleware))\r\n);\r\n\r\nexport { store, sagaMiddleware, rangerMiddleware };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { sagaMiddleware, store } from \"./store\";\r\nimport { rootSaga } from \"./modules\";\r\n\r\nsagaMiddleware.run(rootSaga);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export * from \"./actions\";\r\nexport * from \"./constants\";\r\nexport * from \"./types\";\r\nexport * from \"./sagas\";\r\nexport * from \"./reducers\";\r\nexport * from \"./selector\";\r\n","export * from \"./actions\";\r\nexport * from \"./constants\";\r\nexport * from \"./types\";\r\nexport * from \"./sagas\";\r\nexport * from \"./reducers\";\r\nexport * from \"./selector\";\r\n","export const STUDENT_FETCH_LIST = \"student/FETCH_LIST\";\r\nexport const STUDENT_LIST_DATA = \"student/LIST_DATA\";\r\nexport const STUDENT_CREATE = \"student/CREATE\";\r\nexport const STUDENT_DELETE = \"student/DELETE\";\r\nexport const STUDENT_EDIT = \"student/EDIT\";\r\n","export const TEACHER_FETCH_LIST = \"teacher/FETCH_LIST\";\r\nexport const TEACHER_LIST_DATA = \"teacher/LIST_DATA\";\r\nexport const TEACHER_CREATE = \"teacher/CREATE\";\r\nexport const TEACHER_DELETE = \"teacher/DELETE\";\r\nexport const TEACHER_EDIT = \"teacher/EDIT\";\r\n","import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n\r\nexport type typeAPI = \"teacher\" | \"student\" | \"dsm\";\r\nconst baseURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://data-school-mangement-01.herokuapp.com/api\"\r\n    : \"http://localhost:4000/api\";\r\nconst axiosClient = axios.create({\r\n  baseURL: baseURL,\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n  paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(\r\n  async (config) => {\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response.data;\r\n  },\r\n  function (error) {\r\n    // Do something with response error\r\n    if (error.response.status === 401) {\r\n      console.log(\"unauthorized, logging out ...\");\r\n    }\r\n    return Promise.reject(error.response.data);\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","import {\r\n  ResponseMessage,\r\n  ResponseList,\r\n  Student,\r\n  Teacher,\r\n  Pagination,\r\n} from \"../types\";\r\nimport axiosClient from \"./config\";\r\nexport const teacherApi = {\r\n  getAll: (params: Pagination): Promise<ResponseList<Teacher>> => {\r\n    const url = \"/teacher/list\";\r\n    console.log(params);\r\n\r\n    return axiosClient.get(url, { params });\r\n  },\r\n  getTotal: () => {\r\n    const url = \"/teacher/total\";\r\n    return axiosClient.get(url);\r\n  },\r\n  delete: (id: string) => {\r\n    const url = `/teacher/delete/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n  create: (payload: Teacher) => {\r\n    const url = \"/teacher/create\";\r\n    return axiosClient.post(url, payload);\r\n  },\r\n  put: (payload: Teacher) => {\r\n    const url = `/teacher/edit`;\r\n    return axiosClient.put(url, payload);\r\n  },\r\n};\r\nexport const studentApi = {\r\n  getAll: (params: Pagination): Promise<ResponseList<Student>> => {\r\n    const url = \"/student/list\";\r\n\r\n    return axiosClient.get(url, { params });\r\n  },\r\n  getStudent: (params: { id: string }) => {\r\n    const url = \"/student\";\r\n    return axiosClient.get(url, { params });\r\n  },\r\n  getTotal: () => {\r\n    const url = \"/student/total\";\r\n    return axiosClient.get(url);\r\n  },\r\n  delete: (id: string) => {\r\n    const url = `/student/delete/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n  create: (payload: Student): Promise<ResponseMessage> => {\r\n    const url = \"/student/create\";\r\n    return axiosClient.post(url, payload);\r\n  },\r\n  put: (payload: Student) => {\r\n    const url = `/student/edit`;\r\n    return axiosClient.put(url, payload);\r\n  },\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { all, call } from \"redux-saga/effects\";\r\nimport { studentReducer, teacherReducer } from \"./app\";\r\nimport { ListStudentState, rootStudentSaga } from \"./students\";\r\nimport { ListTeacherState } from \"./teachers\";\r\nimport { rootTeacherSaga } from \"./teachers\";\r\nexport * from \"./teachers\";\r\nexport interface RootState {\r\n  teacher: {\r\n    list: ListTeacherState;\r\n  };\r\n  student: {\r\n    list: ListStudentState;\r\n  };\r\n}\r\nexport const rootReducer = combineReducers({\r\n  teacher: teacherReducer,\r\n  student: studentReducer,\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([call(rootTeacherSaga), call(rootStudentSaga)]);\r\n}\r\n","import { TeacherListActions } from \"./actions\";\r\nimport { TEACHER_FETCH_LIST, TEACHER_LIST_DATA } from \"./constants\";\r\nimport { ListTeacherState } from \"./types\";\r\n\r\nexport const initListTeacher: ListTeacherState = {\r\n  payload: {\r\n    list: [],\r\n    pagination: {\r\n      size: 0,\r\n      page: 0,\r\n      isSort: true,\r\n    },\r\n    total: 0,\r\n  },\r\n  loading: true,\r\n};\r\n\r\nexport const listTeacherReducer = (\r\n  state = initListTeacher,\r\n  action: TeacherListActions\r\n): ListTeacherState => {\r\n  switch (action.type) {\r\n    case TEACHER_FETCH_LIST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TEACHER_LIST_DATA:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { listStudentReducer } from \"./students\";\r\nimport { listTeacherReducer } from \"./teachers/reducers\";\r\nexport const teacherReducer = combineReducers({\r\n  list: listTeacherReducer,\r\n});\r\nexport const studentReducer = combineReducers({\r\n  list: listStudentReducer,\r\n});\r\n","import { STUDENT_FETCH_LIST, STUDENT_LIST_DATA } from \"./constants\";\r\nimport { ListStudentState } from \"./types\";\r\n\r\nexport interface StudentListFetch {\r\n  type: typeof STUDENT_FETCH_LIST;\r\n  payload: {\r\n    page: number;\r\n    size: number;\r\n    isSort: boolean;\r\n  };\r\n}\r\nexport interface StudentListData extends ListStudentState {\r\n  type: typeof STUDENT_LIST_DATA;\r\n}\r\nexport type StudentListActions = StudentListFetch | StudentListData;\r\nexport const fetchListStudent = (\r\n  payload: StudentListFetch[\"payload\"]\r\n): StudentListFetch => ({\r\n  type: STUDENT_FETCH_LIST,\r\n  payload,\r\n});\r\n\r\nexport const getStudents = (\r\n  payload: StudentListData[\"payload\"]\r\n): StudentListData => ({\r\n  type: STUDENT_LIST_DATA,\r\n  payload,\r\n  loading: false,\r\n});\r\n","import { StudentListActions } from \"./actions\";\r\nimport { STUDENT_FETCH_LIST, STUDENT_LIST_DATA } from \"./constants\";\r\nimport { ListStudentState } from \"./types\";\r\n\r\nexport const initListStudent: ListStudentState = {\r\n  payload: {\r\n    list: [],\r\n    total: 0,\r\n    pagination: {\r\n      size: 1,\r\n      page: 8,\r\n      isSort: true,\r\n    },\r\n  },\r\n  loading: true,\r\n};\r\n\r\nexport const listStudentReducer = (\r\n  state = initListStudent,\r\n  action: StudentListActions\r\n): ListStudentState => {\r\n  switch (action.type) {\r\n    case STUDENT_FETCH_LIST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case STUDENT_LIST_DATA:\r\n      return {\r\n        ...state,\r\n        ...action,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n  }\r\n};\r\n","import { RootState } from \"..\";\r\nimport { ListStudentState } from \"./types\";\r\n\r\nexport const selectListStudent = (state: RootState): ListStudentState =>\r\n  state.student.list;\r\n","import { Pagination } from \"types\";\r\nimport { TEACHER_FETCH_LIST, TEACHER_LIST_DATA } from \"./constants\";\r\nimport { ListTeacherState } from \"./types\";\r\n\r\nexport interface TeacherListFetch {\r\n  type: typeof TEACHER_FETCH_LIST;\r\n  payload: Pagination;\r\n}\r\nexport interface TeacherListData extends ListTeacherState {\r\n  type: typeof TEACHER_LIST_DATA;\r\n}\r\n\r\nexport type TeacherListActions = TeacherListFetch | TeacherListData;\r\n\r\nexport const fetchListTeacher = (\r\n  payload: TeacherListFetch[\"payload\"]\r\n): TeacherListFetch => ({\r\n  type: TEACHER_FETCH_LIST,\r\n  payload,\r\n});\r\n\r\nexport const getTeachers = (\r\n  payload: TeacherListData[\"payload\"]\r\n): TeacherListData => ({\r\n  type: TEACHER_LIST_DATA,\r\n  payload,\r\n  loading: false,\r\n});\r\n","import { RootState } from \"..\";\r\nimport { ListTeacherState } from \"./types\";\r\n\r\nexport const selectListTeacher = (state: RootState): ListTeacherState =>\r\n  state.teacher.list;\r\n","import { call, put } from \"redux-saga/effects\";\r\nimport { ResponseList } from \"types\";\r\nimport { getStudents, Student, StudentListFetch } from \"..\";\r\nimport { studentApi } from \"apis\";\r\nimport { toast } from \"react-toastify\";\r\nexport function* getListStudentSaga(action: StudentListFetch) {\r\n  try {\r\n    const data: ResponseList<Student> = yield call(\r\n      studentApi.getAll,\r\n      action.payload\r\n    );\r\n    yield put(getStudents(data));\r\n  } catch (error) {\r\n    toast.warning(\"Student: Some things went wrong\");\r\n    yield put(\r\n      getStudents({\r\n        list: [],\r\n        total: 0,\r\n        pagination: {\r\n          size: 1,\r\n          page: 0,\r\n          isSort: false,\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { takeLatest } from \"redux-saga/effects\";\r\nimport { STUDENT_FETCH_LIST } from \"..\";\r\nimport { getListStudentSaga } from \"./studentSaga\";\r\nexport function* rootStudentSaga() {\r\n  yield takeLatest(STUDENT_FETCH_LIST, getListStudentSaga);\r\n}\r\n","import { call, put } from \"redux-saga/effects\";\r\nimport { getTeachers, TeacherListFetch } from \"..\";\r\nimport { teacherApi } from \"apis\";\r\nimport { ResponseList, Teacher } from \"types\";\r\nimport { toast } from \"react-toastify\";\r\nexport function* getListTeacherSaga(action: TeacherListFetch) {\r\n  try {\r\n    const res: ResponseList<Teacher> = yield call(\r\n      teacherApi.getAll,\r\n      action.payload\r\n    );\r\n    yield put(getTeachers(res));\r\n  } catch (error) {\r\n    toast.warning(\"Teacher: Some things went wrong\");\r\n\r\n    yield put(\r\n      getTeachers({\r\n        list: [],\r\n        total: 0,\r\n        pagination: {\r\n          size: 1,\r\n          page: 0,\r\n          isSort: false,\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { takeLatest } from \"redux-saga/effects\";\r\nimport { TEACHER_FETCH_LIST } from \"..\";\r\nimport { getListTeacherSaga } from \"./teacherSaga\";\r\nexport function* rootTeacherSaga() {\r\n  yield takeLatest(TEACHER_FETCH_LIST, getListTeacherSaga);\r\n}\r\n"],"sourceRoot":""}